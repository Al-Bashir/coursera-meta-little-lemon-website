import {convertDateToISODateOnly} from '../utility/dateUtility.js';

const availableTimesByDate = {
    '2023-08-29': ['10:00', '11:00', '12:00'],
    '2023-09-01': ['10:00', '11:00', '12:00'],
    '2023-09-02': ['14:00', '15:00', '16:00'],
    '2023-09-03': ['10:00', '11:00', '12:00'],
    '2023-09-04': ['14:00', '15:00', '16:00'],
    '2023-09-05': ['10:00', '11:00', '12:00'],
    '2023-09-06': ['14:00', '15:00', '16:00'],
    '2023-09-07': ['10:00', '11:00', '12:00'],
    '2023-09-08': ['14:00', '15:00', '16:00'],
    '2023-09-09': ['10:00', '11:00', '12:00'],
    '2023-09-10': ['14:00', '15:00', '16:00'],
    '2023-09-11': ['10:00', '11:00', '12:00'],
    '2023-09-12': ['14:00', '15:00', '16:00'],
    '2023-09-13': ['10:00', '11:00', '12:00'],
    '2023-09-14': ['14:00', '15:00', '16:00'],
    '2023-09-15': ['10:00', '11:00', '12:00'],
    '2023-09-16': ['14:00', '15:00', '16:00'],
    '2023-09-17': ['10:00', '11:00', '12:00'],
    '2023-09-18': ['14:00', '15:00', '16:00'],
    '2023-09-19': ['10:00', '11:00', '12:00'],
    '2023-09-20': ['14:00', '15:00', '16:00'],
    '2023-09-21': ['10:00', '11:00', '12:00'],
    '2023-09-22': ['14:00', '15:00', '16:00'],
    '2023-09-23': ['10:00', '11:00', '12:00'],
    '2023-09-24': ['14:00', '15:00', '16:00'],
    '2023-09-25': ['10:00', '11:00', '12:00'],
    '2023-09-26': ['14:00', '15:00', '16:00'],
    '2023-09-27': ['10:00', '11:00', '12:00'],
    '2023-09-28': ['14:00', '15:00', '16:00'],
    '2023-09-29': ['10:00', '11:00', '12:00'],
    '2023-09-30': ['14:00', '15:00', '16:00'],
    '2023-10-01': ['10:00', '11:00', '12:00'],
    '2023-10-02': ['14:00', '15:00', '16:00'],
    '2023-10-03': ['10:00', '11:00', '12:00'],
    '2023-10-04': ['14:00', '15:00', '16:00'],
    '2023-10-05': ['10:00', '11:00', '12:00'],
    '2023-10-06': ['14:00', '15:00', '16:00'],
    '2023-10-07': ['10:00', '11:00', '12:00'],
    '2023-10-08': ['14:00', '15:00', '16:00'],
    '2023-10-09': ['10:00', '11:00', '12:00'],
    '2023-10-10': ['14:00', '15:00', '16:00'],
    '2023-10-11': ['10:00', '11:00', '12:00'],
    '2023-10-12': ['14:00', '15:00', '16:00'],
    '2023-10-13': ['10:00', '11:00', '09:00'],
    '2023-10-14': ['14:00', '15:00', '16:00'],
    '2023-10-15': ['10:00', '11:00', '12:00'],
    '2023-10-16': ['14:00', '15:00', '16:00'],
    '2023-10-17': ['10:00', '11:00', '12:00'],
    '2023-10-18': ['14:00', '15:00', '16:00'],
    '2023-10-19': ['10:00', '11:00', '12:00'],
    '2023-10-20': ['14:00', '15:00', '16:00'],
    '2023-10-21': ['10:00', '11:00', '12:00'],
    '2023-10-22': ['14:00', '15:00', '16:00'],
    '2023-10-23': ['10:00', '11:00', '12:00'],
    '2023-10-24': ['14:00', '15:00', '16:00'],
    '2023-10-25': ['10:00', '11:00', '12:00'],
    '2023-10-26': ['14:00', '15:00', '16:00'],
    '2023-10-27': ['10:00', '11:00', '12:00'],
    '2023-10-28': ['14:00', '15:00', '16:00'],
    '2023-10-29': ['10:00', '11:00', '12:00'],
    '2023-10-30': ['14:00', '15:00', '16:00'],
};


const fetchAPI = (date) => {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            if (availableTimesByDate[date] && date >= convertDateToISODateOnly(new Date()) && availableTimesByDate[date].length > 0) {
                resolve(availableTimesByDate[date]);
            }
            else {
                reject(new Error('No available times for the selected date.'));
            }
        }, 1000)
    })
}

const submitAPI = (formData) => {

    availableTimesByDate[formData.date] = availableTimesByDate[formData.date].filter(time => time !== formData.time);

    return new Promise((resolve, reject) => {
        setTimeout(() => {
            if (formData) {
                resolve(true); // Simulate successful submission
            } else {
                reject(new Error('Form submission failed.'));
            }
        }, 1000); // Simulate API delay
    });
};

export { fetchAPI, submitAPI }